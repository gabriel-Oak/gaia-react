// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainRouter should match snapshot 1`] = `
<div
  className="Main"
>
  <ToolBar
    history={
      Object {
        "goBack": [Function],
        "push": [Function],
      }
    }
    title="Gaia"
    toggleDrawer={[Function]}
  />
  <SideDrawer
    open={false}
    redirect_to={[Function]}
    toggleDrawer={[Function]}
    user={
      Object {
        "admin": true,
        "email": "test@email.cone",
        "nome": "Jorginho",
        "user": "string",
      }
    }
  />
  <WithStyles(ForwardRef(Container))
    className="makeStyles-container-162"
    maxWidth="md"
  >
    <Switch>
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(HomePage)",
            "type": [Function],
          }
        }
        exact={true}
        path="/"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(UserListContainer)",
            "type": [Function],
          }
        }
        exact={true}
        path="/users"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(UserFormContainer)",
            "type": [Function],
          }
        }
        exact={true}
        path="/users/new"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(UserFormContainer)",
            "type": [Function],
          }
        }
        exact={true}
        path="/users/:userId/edit"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(ProfileContainer)",
            "type": [Function],
          }
        }
        exact={true}
        path="/profile/edit"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(MenusFormContainer)",
            "type": [Function],
          }
        }
        exact={true}
        path="/menus/"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(ExchangesContainer)",
            "type": [Function],
          }
        }
        exact={true}
        path="/trocas"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(NotFoundPage)",
            "type": [Function],
          }
        }
        path="**"
      />
    </Switch>
  </WithStyles(ForwardRef(Container))>
  <Snack
    closeSnack={[Function]}
    open={false}
  />
</div>
`;
